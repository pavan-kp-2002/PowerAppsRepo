// 
// Code generated by a template.
//
using System;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;

namespace Proxy 
{
	[EntityLogicalName("customeraddress")]
	public partial class CustomerAddress : CCLLC.CDS.Sdk.EarlyBound.EntityProxy
	{
		public const string EntityLogicalName = "customeraddress";

		public CustomerAddress()
			: base("customeraddress") {}

		#region Local OptionSet Enumerations

		#pragma warning disable IDE1006 // Naming Styles
		public enum eAddressTypeCode { BillTo=1,  ShipTo=2,  Primary=3,  Other=4, }
		public enum eFreightTermsCode { FOB=1,  NoCharge=2, }
		public enum eShippingMethodCode { Airborne=1,  DHL=2,  FedEx=3,  UPS=4,  PostalMail=5,  FullLoad=6,  WillCall=7, }
		#pragma warning restore IDE1006 // Naming Styles

		#endregion Local OptionSet Enumerations

		#region Late Bound Field Constants
	
		public class Fields
		{			
			public const string Id = "customeraddressid";
			public const string AddressNumber = "addressnumber";
			public const string AddressTypeCode = "addresstypecode";
			public const string AddressTypeCodeName = "addresstypecodename";
			public const string City = "city";
			public const string Composite = "composite";
			public const string Country = "country";
			public const string County = "county";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerAddressId = "customeraddressid";
			public const string ExchangeRate = "exchangerate";
			public const string Fax = "fax";
			public const string FreightTermsCode = "freighttermscode";
			public const string FreightTermsCodeName = "freighttermscodename";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Latitude = "latitude";
			public const string Line1 = "line1";
			public const string Line2 = "line2";
			public const string Line3 = "line3";
			public const string Longitude = "longitude";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string ObjectTypeCode = "objecttypecode";
			public const string ObjectTypeCodeName = "objecttypecodename";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdType = "owneridtype";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningUser = "owninguser";
			public const string ParentId = "parentid";
			public const string ParentIdTypeCode = "parentidtypecode";
			public const string PostalCode = "postalcode";
			public const string PostOfficeBox = "postofficebox";
			public const string PrimaryContactName = "primarycontactname";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodeName = "shippingmethodcodename";
			public const string StateOrProvince = "stateorprovince";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UPSZone = "upszone";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string UTCOffset = "utcoffset";
			public const string VersionNumber = "versionnumber";
		}

		#endregion Late Bound Field Constants

		[AttributeLogicalName("customeraddressid")]
		public override Guid Id
		{
			get => base.Id; 
			set 
			{
				CustomerAddressId = value;
				base.Id = value;
			}
		}

		[AttributeLogicalName("addressnumber")]
		public virtual int? AddressNumber
		{
			get => GetPropertyValue<int?>("addressnumber"); 
			set => SetPropertyValue("addressnumber", value); 
		}

		[AttributeLogicalName("addresstypecode")]
		public virtual eAddressTypeCode? AddressTypeCode
		{
			get => (eAddressTypeCode?)GetPropertyValue<OptionSetValue>("addresstypecode")?.Value;
			set => SetPropertyValue("addresstypecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("addresstypecodename")]
		public virtual string AddressTypeCodeName
		{
			get => GetPropertyValue<string>("addresstypecodename"); 
		}

		[AttributeLogicalName("city")]
		public virtual string City
		{
			get => GetPropertyValue<string>("city"); 
			set => SetPropertyValue("city", value); 
		}

		[AttributeLogicalName("composite")]
		public virtual string Composite
		{
			get => GetPropertyValue<string>("composite"); 
		}

		[AttributeLogicalName("country")]
		public virtual string Country
		{
			get => GetPropertyValue<string>("country"); 
			set => SetPropertyValue("country", value); 
		}

		[AttributeLogicalName("county")]
		public virtual string County
		{
			get => GetPropertyValue<string>("county"); 
			set => SetPropertyValue("county", value); 
		}

		[AttributeLogicalName("createdby")]
		public virtual EntityReference CreatedBy
		{
			get => GetPropertyValue<EntityReference>("createdby"); 
		}

		[AttributeLogicalName("createdbyname")]
		public virtual string CreatedByName
		{
			get => GetPropertyValue<string>("createdbyname"); 
		}

		[AttributeLogicalName("createdbyyominame")]
		public virtual string CreatedByYomiName
		{
			get => GetPropertyValue<string>("createdbyyominame"); 
		}

		[AttributeLogicalName("createdon")]
		public virtual DateTime? CreatedOn
		{
			get => GetPropertyValue<DateTime?>("createdon"); 
		}

		[AttributeLogicalName("createdonbehalfby")]
		public virtual EntityReference CreatedOnBehalfBy
		{
			get => GetPropertyValue<EntityReference>("createdonbehalfby"); 
		}

		[AttributeLogicalName("createdonbehalfbyname")]
		public virtual string CreatedOnBehalfByName
		{
			get => GetPropertyValue<string>("createdonbehalfbyname"); 
		}

		[AttributeLogicalName("createdonbehalfbyyominame")]
		public virtual string CreatedOnBehalfByYomiName
		{
			get => GetPropertyValue<string>("createdonbehalfbyyominame"); 
		}

		[AttributeLogicalName("customeraddressid")]
		public virtual Guid CustomerAddressId
		{
			get => GetPropertyValue<Guid>("customeraddressid"); 
			set => SetPropertyValue("customeraddressid", value); 
		}

		[AttributeLogicalName("exchangerate")]
		public virtual decimal? ExchangeRate
		{
			get => GetPropertyValue<decimal?>("exchangerate"); 
		}

		[AttributeLogicalName("fax")]
		public virtual string Fax
		{
			get => GetPropertyValue<string>("fax"); 
			set => SetPropertyValue("fax", value); 
		}

		[AttributeLogicalName("freighttermscode")]
		public virtual eFreightTermsCode? FreightTermsCode
		{
			get => (eFreightTermsCode?)GetPropertyValue<OptionSetValue>("freighttermscode")?.Value;
			set => SetPropertyValue("freighttermscode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("freighttermscodename")]
		public virtual string FreightTermsCodeName
		{
			get => GetPropertyValue<string>("freighttermscodename"); 
		}

		[AttributeLogicalName("importsequencenumber")]
		public virtual int? ImportSequenceNumber
		{
			get => GetPropertyValue<int?>("importsequencenumber"); 
			set => SetPropertyValue("importsequencenumber", value); 
		}

		[AttributeLogicalName("latitude")]
		public virtual double? Latitude
		{
			get => GetPropertyValue<double?>("latitude"); 
			set => SetPropertyValue("latitude", value); 
		}

		[AttributeLogicalName("line1")]
		public virtual string Line1
		{
			get => GetPropertyValue<string>("line1"); 
			set => SetPropertyValue("line1", value); 
		}

		[AttributeLogicalName("line2")]
		public virtual string Line2
		{
			get => GetPropertyValue<string>("line2"); 
			set => SetPropertyValue("line2", value); 
		}

		[AttributeLogicalName("line3")]
		public virtual string Line3
		{
			get => GetPropertyValue<string>("line3"); 
			set => SetPropertyValue("line3", value); 
		}

		[AttributeLogicalName("longitude")]
		public virtual double? Longitude
		{
			get => GetPropertyValue<double?>("longitude"); 
			set => SetPropertyValue("longitude", value); 
		}

		[AttributeLogicalName("modifiedby")]
		public virtual EntityReference ModifiedBy
		{
			get => GetPropertyValue<EntityReference>("modifiedby"); 
		}

		[AttributeLogicalName("modifiedbyname")]
		public virtual string ModifiedByName
		{
			get => GetPropertyValue<string>("modifiedbyname"); 
		}

		[AttributeLogicalName("modifiedbyyominame")]
		public virtual string ModifiedByYomiName
		{
			get => GetPropertyValue<string>("modifiedbyyominame"); 
		}

		[AttributeLogicalName("modifiedon")]
		public virtual DateTime? ModifiedOn
		{
			get => GetPropertyValue<DateTime?>("modifiedon"); 
		}

		[AttributeLogicalName("modifiedonbehalfby")]
		public virtual EntityReference ModifiedOnBehalfBy
		{
			get => GetPropertyValue<EntityReference>("modifiedonbehalfby"); 
		}

		[AttributeLogicalName("modifiedonbehalfbyname")]
		public virtual string ModifiedOnBehalfByName
		{
			get => GetPropertyValue<string>("modifiedonbehalfbyname"); 
		}

		[AttributeLogicalName("modifiedonbehalfbyyominame")]
		public virtual string ModifiedOnBehalfByYomiName
		{
			get => GetPropertyValue<string>("modifiedonbehalfbyyominame"); 
		}

		[AttributeLogicalName("name")]
		public virtual string Name
		{
			get => GetPropertyValue<string>("name"); 
			set => SetPropertyValue("name", value); 
		}

		[AttributeLogicalName("objecttypecode")]
		public virtual string ObjectTypeCode
		{
			get => GetPropertyValue<string>("objecttypecode"); 
			set => SetPropertyValue("objecttypecode", value); 
		}

		[AttributeLogicalName("objecttypecodename")]
		public virtual string ObjectTypeCodeName
		{
			get => GetPropertyValue<string>("objecttypecodename"); 
		}

		[AttributeLogicalName("overriddencreatedon")]
		public virtual DateTime? OverriddenCreatedOn
		{
			get => GetPropertyValue<DateTime?>("overriddencreatedon"); 
			set => SetPropertyValue("overriddencreatedon", value); 
		}

		[AttributeLogicalName("ownerid")]
		public virtual EntityReference OwnerId
		{
			get => GetPropertyValue<EntityReference>("ownerid"); 
		}

		[AttributeLogicalName("owneridtype")]
		public virtual string OwnerIdType
		{
			get => GetPropertyValue<string>("owneridtype"); 
		}

		[AttributeLogicalName("owningbusinessunit")]
		public virtual EntityReference OwningBusinessUnit
		{
			get => GetPropertyValue<EntityReference>("owningbusinessunit"); 
		}

		[AttributeLogicalName("owninguser")]
		public virtual EntityReference OwningUser
		{
			get => GetPropertyValue<EntityReference>("owninguser"); 
		}

		[AttributeLogicalName("parentid")]
		public virtual EntityReference ParentId
		{
			get => GetPropertyValue<EntityReference>("parentid"); 
			set => SetPropertyValue("parentid", value); 
		}

		[AttributeLogicalName("parentidtypecode")]
		public virtual string ParentIdTypeCode
		{
			get => GetPropertyValue<string>("parentidtypecode"); 
			set => SetPropertyValue("parentidtypecode", value); 
		}

		[AttributeLogicalName("postalcode")]
		public virtual string PostalCode
		{
			get => GetPropertyValue<string>("postalcode"); 
			set => SetPropertyValue("postalcode", value); 
		}

		[AttributeLogicalName("postofficebox")]
		public virtual string PostOfficeBox
		{
			get => GetPropertyValue<string>("postofficebox"); 
			set => SetPropertyValue("postofficebox", value); 
		}

		[AttributeLogicalName("primarycontactname")]
		public virtual string PrimaryContactName
		{
			get => GetPropertyValue<string>("primarycontactname"); 
			set => SetPropertyValue("primarycontactname", value); 
		}

		[AttributeLogicalName("shippingmethodcode")]
		public virtual eShippingMethodCode? ShippingMethodCode
		{
			get => (eShippingMethodCode?)GetPropertyValue<OptionSetValue>("shippingmethodcode")?.Value;
			set => SetPropertyValue("shippingmethodcode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("shippingmethodcodename")]
		public virtual string ShippingMethodCodeName
		{
			get => GetPropertyValue<string>("shippingmethodcodename"); 
		}

		[AttributeLogicalName("stateorprovince")]
		public virtual string StateOrProvince
		{
			get => GetPropertyValue<string>("stateorprovince"); 
			set => SetPropertyValue("stateorprovince", value); 
		}

		[AttributeLogicalName("telephone1")]
		public virtual string Telephone1
		{
			get => GetPropertyValue<string>("telephone1"); 
			set => SetPropertyValue("telephone1", value); 
		}

		[AttributeLogicalName("telephone2")]
		public virtual string Telephone2
		{
			get => GetPropertyValue<string>("telephone2"); 
			set => SetPropertyValue("telephone2", value); 
		}

		[AttributeLogicalName("telephone3")]
		public virtual string Telephone3
		{
			get => GetPropertyValue<string>("telephone3"); 
			set => SetPropertyValue("telephone3", value); 
		}

		[AttributeLogicalName("timezoneruleversionnumber")]
		public virtual int? TimeZoneRuleVersionNumber
		{
			get => GetPropertyValue<int?>("timezoneruleversionnumber"); 
			set => SetPropertyValue("timezoneruleversionnumber", value); 
		}

		[AttributeLogicalName("transactioncurrencyid")]
		public virtual EntityReference TransactionCurrencyId
		{
			get => GetPropertyValue<EntityReference>("transactioncurrencyid"); 
			set => SetPropertyValue("transactioncurrencyid", value); 
		}

		[AttributeLogicalName("transactioncurrencyidname")]
		public virtual string TransactionCurrencyIdName
		{
			get => GetPropertyValue<string>("transactioncurrencyidname"); 
		}

		[AttributeLogicalName("upszone")]
		public virtual string UPSZone
		{
			get => GetPropertyValue<string>("upszone"); 
			set => SetPropertyValue("upszone", value); 
		}

		[AttributeLogicalName("utcconversiontimezonecode")]
		public virtual int? UTCConversionTimeZoneCode
		{
			get => GetPropertyValue<int?>("utcconversiontimezonecode"); 
			set => SetPropertyValue("utcconversiontimezonecode", value); 
		}

		[AttributeLogicalName("utcoffset")]
		public virtual int? UTCOffset
		{
			get => GetPropertyValue<int?>("utcoffset"); 
			set => SetPropertyValue("utcoffset", value); 
		}

		[AttributeLogicalName("versionnumber")]
		public virtual int? VersionNumber
		{
			get => GetPropertyValue<int?>("versionnumber"); 
		}

	}
}
