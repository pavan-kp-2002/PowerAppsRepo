// 
// Code generated by a template.
//
using System;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;

namespace Proxy 
{
	[EntityLogicalName("sf_airlines")]
	public partial class SfAirlines : CCLLC.CDS.Sdk.EarlyBound.EntityProxy
	{
		public const string EntityLogicalName = "sf_airlines";

		public SfAirlines()
			: base("sf_airlines") {}

		#region Local OptionSet Enumerations

		#pragma warning disable IDE1006 // Naming Styles
		public enum eStatecode { Active=0,  Inactive=1, }
		public enum eStatuscode { Active=1,  Inactive=2, }
		#pragma warning restore IDE1006 // Naming Styles

		#endregion Local OptionSet Enumerations

		#region Late Bound Field Constants
	
		public class Fields
		{			
			public const string Id = "sf_airlinesid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdType = "owneridtype";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string SfAirline = "sf_airline";
			public const string SfAirlineMemberCheck = "sf_airlinemembercheck";
			public const string SfAirlinemembercheckName = "sf_airlinemembercheckname";
			public const string SfAirlinesId = "sf_airlinesid";
			public const string SfAirlineUrl = "sf_airlineurl";
			public const string SfLogo = "sf_logo";
			public const string SfLogoId = "sf_logoid";
			public const string SfLogoTimestamp = "sf_logo_timestamp";
			public const string SfLogoURL = "sf_logo_url";
			public const string Statecode = "statecode";
			public const string StatecodeName = "statecodename";
			public const string Statuscode = "statuscode";
			public const string StatuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		#endregion Late Bound Field Constants

		[AttributeLogicalName("sf_airlinesid")]
		public override Guid Id
		{
			get => base.Id; 
			set 
			{
				SfAirlinesId = value;
				base.Id = value;
			}
		}

		[AttributeLogicalName("createdby")]
		public virtual EntityReference CreatedBy
		{
			get => GetPropertyValue<EntityReference>("createdby"); 
		}

		[AttributeLogicalName("createdbyname")]
		public virtual string CreatedByName
		{
			get => GetPropertyValue<string>("createdbyname"); 
		}

		[AttributeLogicalName("createdbyyominame")]
		public virtual string CreatedByYomiName
		{
			get => GetPropertyValue<string>("createdbyyominame"); 
		}

		[AttributeLogicalName("createdon")]
		public virtual DateTime? CreatedOn
		{
			get => GetPropertyValue<DateTime?>("createdon"); 
		}

		[AttributeLogicalName("createdonbehalfby")]
		public virtual EntityReference CreatedOnBehalfBy
		{
			get => GetPropertyValue<EntityReference>("createdonbehalfby"); 
		}

		[AttributeLogicalName("createdonbehalfbyname")]
		public virtual string CreatedOnBehalfByName
		{
			get => GetPropertyValue<string>("createdonbehalfbyname"); 
		}

		[AttributeLogicalName("createdonbehalfbyyominame")]
		public virtual string CreatedOnBehalfByYomiName
		{
			get => GetPropertyValue<string>("createdonbehalfbyyominame"); 
		}

		[AttributeLogicalName("importsequencenumber")]
		public virtual int? ImportSequenceNumber
		{
			get => GetPropertyValue<int?>("importsequencenumber"); 
			set => SetPropertyValue("importsequencenumber", value); 
		}

		[AttributeLogicalName("modifiedby")]
		public virtual EntityReference ModifiedBy
		{
			get => GetPropertyValue<EntityReference>("modifiedby"); 
		}

		[AttributeLogicalName("modifiedbyname")]
		public virtual string ModifiedByName
		{
			get => GetPropertyValue<string>("modifiedbyname"); 
		}

		[AttributeLogicalName("modifiedbyyominame")]
		public virtual string ModifiedByYomiName
		{
			get => GetPropertyValue<string>("modifiedbyyominame"); 
		}

		[AttributeLogicalName("modifiedon")]
		public virtual DateTime? ModifiedOn
		{
			get => GetPropertyValue<DateTime?>("modifiedon"); 
		}

		[AttributeLogicalName("modifiedonbehalfby")]
		public virtual EntityReference ModifiedOnBehalfBy
		{
			get => GetPropertyValue<EntityReference>("modifiedonbehalfby"); 
		}

		[AttributeLogicalName("modifiedonbehalfbyname")]
		public virtual string ModifiedOnBehalfByName
		{
			get => GetPropertyValue<string>("modifiedonbehalfbyname"); 
		}

		[AttributeLogicalName("modifiedonbehalfbyyominame")]
		public virtual string ModifiedOnBehalfByYomiName
		{
			get => GetPropertyValue<string>("modifiedonbehalfbyyominame"); 
		}

		[AttributeLogicalName("overriddencreatedon")]
		public virtual DateTime? OverriddenCreatedOn
		{
			get => GetPropertyValue<DateTime?>("overriddencreatedon"); 
			set => SetPropertyValue("overriddencreatedon", value); 
		}

		[AttributeLogicalName("ownerid")]
		public virtual EntityReference OwnerId
		{
			get => GetPropertyValue<EntityReference>("ownerid"); 
			set => SetPropertyValue("ownerid", value); 
		}

		[AttributeLogicalName("owneridname")]
		public virtual string OwnerIdName
		{
			get => GetPropertyValue<string>("owneridname"); 
		}

		[AttributeLogicalName("owneridtype")]
		public virtual string OwnerIdType
		{
			get => GetPropertyValue<string>("owneridtype"); 
			set => SetPropertyValue("owneridtype", value); 
		}

		[AttributeLogicalName("owneridyominame")]
		public virtual string OwnerIdYomiName
		{
			get => GetPropertyValue<string>("owneridyominame"); 
		}

		[AttributeLogicalName("owningbusinessunit")]
		public virtual EntityReference OwningBusinessUnit
		{
			get => GetPropertyValue<EntityReference>("owningbusinessunit"); 
		}

		[AttributeLogicalName("owningbusinessunitname")]
		public virtual string OwningBusinessUnitName
		{
			get => GetPropertyValue<string>("owningbusinessunitname"); 
		}

		[AttributeLogicalName("owningteam")]
		public virtual EntityReference OwningTeam
		{
			get => GetPropertyValue<EntityReference>("owningteam"); 
		}

		[AttributeLogicalName("owninguser")]
		public virtual EntityReference OwningUser
		{
			get => GetPropertyValue<EntityReference>("owninguser"); 
		}

		[AttributeLogicalName("sf_airline")]
		public virtual string SfAirline
		{
			get => GetPropertyValue<string>("sf_airline"); 
			set => SetPropertyValue("sf_airline", value); 
		}

		[AttributeLogicalName("sf_airlinemembercheck")]
		public virtual bool? SfAirlineMemberCheck
		{
			get => GetPropertyValue<bool?>("sf_airlinemembercheck"); 
			set => SetPropertyValue("sf_airlinemembercheck", value); 
		}

		[AttributeLogicalName("sf_airlinemembercheckname")]
		public virtual string SfAirlinemembercheckName
		{
			get => GetPropertyValue<string>("sf_airlinemembercheckname"); 
		}

		[AttributeLogicalName("sf_airlinesid")]
		public virtual Guid SfAirlinesId
		{
			get => GetPropertyValue<Guid>("sf_airlinesid"); 
			set => SetPropertyValue("sf_airlinesid", value); 
		}

		[AttributeLogicalName("sf_airlineurl")]
		public virtual string SfAirlineUrl
		{
			get => GetPropertyValue<string>("sf_airlineurl"); 
			set => SetPropertyValue("sf_airlineurl", value); 
		}

		[AttributeLogicalName("sf_logo")]
		public virtual string SfLogo
		{
			get => GetPropertyValue<string>("sf_logo"); 
			set => SetPropertyValue("sf_logo", value); 
		}

		[AttributeLogicalName("sf_logoid")]
		public virtual Guid SfLogoId
		{
			get => GetPropertyValue<Guid>("sf_logoid"); 
		}

		[AttributeLogicalName("sf_logo_timestamp")]
		public virtual int? SfLogoTimestamp
		{
			get => GetPropertyValue<int?>("sf_logo_timestamp"); 
		}

		[AttributeLogicalName("sf_logo_url")]
		public virtual string SfLogoURL
		{
			get => GetPropertyValue<string>("sf_logo_url"); 
		}

		[AttributeLogicalName("statecode")]
		public virtual eStatecode? Statecode
		{
			get => (eStatecode?)GetPropertyValue<OptionSetValue>("statecode")?.Value;
			set => SetPropertyValue("statecode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("statecodename")]
		public virtual string StatecodeName
		{
			get => GetPropertyValue<string>("statecodename"); 
		}

		[AttributeLogicalName("statuscode")]
		public virtual eStatuscode? Statuscode
		{
			get => (eStatuscode?)GetPropertyValue<OptionSetValue>("statuscode")?.Value;
			set => SetPropertyValue("statuscode", value is null ? null : new OptionSetValue((int)value)); 
		}

		[AttributeLogicalName("statuscodename")]
		public virtual string StatuscodeName
		{
			get => GetPropertyValue<string>("statuscodename"); 
		}

		[AttributeLogicalName("timezoneruleversionnumber")]
		public virtual int? TimeZoneRuleVersionNumber
		{
			get => GetPropertyValue<int?>("timezoneruleversionnumber"); 
			set => SetPropertyValue("timezoneruleversionnumber", value); 
		}

		[AttributeLogicalName("utcconversiontimezonecode")]
		public virtual int? UTCConversionTimeZoneCode
		{
			get => GetPropertyValue<int?>("utcconversiontimezonecode"); 
			set => SetPropertyValue("utcconversiontimezonecode", value); 
		}

		[AttributeLogicalName("versionnumber")]
		public virtual int? VersionNumber
		{
			get => GetPropertyValue<int?>("versionnumber"); 
		}

	}
}
